ion-select {
    width: 100%;
    color: black;
    font-family: "Noto Sans JP", sans-serif;
    text-align: center;
    max-height: 0.7em;
    position: relative;
    top: -0.5em;
}
.btn {
    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
    border-radius: 24px;
    width: 80%;
}

@keyframes gradient {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Open+Sans+Condensed:wght@300&display=swap");

h2 {
    font-family: "Noto Sans JP", sans-serif;
}
ion-input {
    min-height: 2em;
    font-family: "Noto Sans JP";
    font-size: 18px;
    color: black;
}

.line-input {
    margin: 0 !important;
    background: none !important;
    padding: 0 !important;
    ion-item {
        --border-color: transparent !important;
        --highlight-height: 0;
        border: 1px solid rgba(0, 0, 0, 0.514);
        border-radius: 4px;

        &.item-has-focus {
            border: 1px solid var(--ion-color-success, #0da02d);
        }

        ion-label {
            color: #807e7e !important;
            font-weight: 300;
            font-size: 1rem !important;
        }
        ion-input {
            font-family: "Noto Sans JP", sans-serif;
            color: black;
        }
    }
}

/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@-moz-keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.fade-in {
    transition: 2s;
    opacity: 0; /* make things invisible upon start */
    -webkit-animation: fadeIn ease-in 1; /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation: fadeIn ease-in 1;
    animation: fadeIn ease-in 1;

    -webkit-animation-fill-mode: forwards; /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    -moz-animation-fill-mode: forwards;
    animation-fill-mode: forwards;

    -webkit-animation-duration: 0.1s;
    -moz-animation-duration: 0.1s;
    animation-duration: 0.1;
}

.fade-in.one {
    -webkit-animation-delay: 0.1s;
    -moz-animation-delay: 0.1s;
    animation-delay: 0.1s;
}


